- Составить требования.
###############################################################################################################################################
Сценарии:
* Добавление/редактирование вопроса (админом сайта). Указание тегов для него. Указание какие вопросы обязательно задать до текущего вопроса.
  - поиск похожих вопросов, во избежание добавления дубликата
  - возможность добавить переводы для вопроса
* Получение случайно сгенеренного списка вопросов по указанным тегам + по другим параметрам.
* Редактирование списка вопросов, такое как:
  - удаление вопросов
  - замена на равноценные (с теми же тегами)
  - добавление нового вопроса с указанными тегами
  - добавление нового вопроса который можно задать только после данного.
* Сохранение списка вопросов в базе, и доступ к нему по уникальной ссылке.
* Выбор языка сайта, при этом если имеются переводы вопросов для текущего языка, то именно они будут показываться.
* Создание аккаунта на сайте.
* Поиск вопросов по разным критериям: теги, время последнего редактирования, автор вопроса, частота включения в списки, оценки пользователей
>> для залогиненного пользователя:
* Добавление/редактирование вопроса. Указание что вопрос является приватным - не видимым для других.
* Голосование за не свои вопросы. от 1 до 5.
* Добавление комментариев к вопросам / к комментариям. Голосование за не свои комментарии +1 -1.

- Определиться с выбором технологий.
################################################################################################################################################
Application server: glassfish
Java EE 7, JSF, EJB, JPA
Hibernate
MySql

- Определиться с инструментарием.
################################################################################################################################################
Netbeans
Maven
Git
Selenium
TeamCity
SonarQube

- Тестирование
################################################################################################################################################
Unit tests
Deployment test
Integration tests
UI Tests (with selenium driver)

- Продумать модель предметной области.
################################################################################################################################################
* Текстовый блок
  - текст
  - язык текста (строка)
  - дата начала срока действия
  - дата завершения срока действия
  - причина завершения срока действия (появилась новая версия | удалена)
  - автор  
  - родительская текстовая сущность  

* Текстовая сущность
  - текстовые блоки (для текущего языка актуален в любой момент только максимум 1 блок, остальные - история)
  - автор (пользователь)
  - родительская текстовая сущность
  - дата создания
  - дата последнего измененния
  - суммарная оценка (integer)
  - средняя оценка (float)

* Вопрос, наследует текстовый блок 
  - список тегов
  - список комментариев  

* Комментарий, наследует текстовый блок
  - список комментариев
  - ответ на вопрос?
    
* Тег
  - текст тега	
	
* Оценка текстовой сущности
  - числовая оценка
  - родительская текстовая сущность
  - автор оценки (пользователь)
  - дата создания  
  
* Пользователь
  - персональные данные
  - роль (админ | обычный пользователь)
  

- Создать проект, продумать структуру директорий, и закоммитить в систему контроля версий.
- Написать Hello world страничку сайта.
- Написать скрипты создания базы.
- Реализовать архитектуру слоев веб приложения.
- Автоматизировать сборку, деплоймент и запуск приложения.
- Сортировать сценарии использования в порядке убывания значимости. Начать реализовывать сценарии по списку.
